l4 = legendre(4, xSeq)
l5 = legendre(5, xSeq)
plot(xSeq, l0)
plot(xSeq, l0, type = "l")
lines(xSeq, l1)
lines(xSeq, l1, col = "red")
lines(xSeq, l2, col = "blue")
lines(xSeq, l3, col = "green")
lines(xSeq, l4, col = "pink")
lines(xSeq, l5, col = "lightblue")
plot(xSeq, l0, type = "l", ylime = (-50, 50))
plot(xSeq, l0, type = "l", ylim = (-50, 50))
plot(xSeq, l0, type = "l", ylim = c(-50, 50))
lines(xSeq, l1, col = "red")
lines(xSeq, l2, col = "blue")
lines(xSeq, l3, col = "green")
lines(xSeq, l4, col = "pink")
lines(xSeq, l5, col = "lightblue")
plot(xSeq, l0, type = "l", ylim = c(-26, 26))
lines(xSeq, l1, col = "red")
lines(xSeq, l2, col = "blue")
lines(xSeq, l3, col = "green")
lines(xSeq, l4, col = "pink")
lines(xSeq, l5, col = "lightblue")
source("F:/.University/5th Year/STA5068Z/Etienne Assignments/Project/Assignment1.R", echo=TRUE)
source("F:/.University/5th Year/STA5068Z/Etienne Assignments/Project/Assignment1.R", echo=TRUE)
source("F:/.University/5th Year/STA5068Z/Etienne Assignments/Project/Assignment1.R", echo=TRUE)
set.seed(123)
alphaRand = runif(3, -1, 1)
betaRand = runif(3, -1, 1)
alphaRand
betaRand
legendre = function(order, x)
{
L = 0
for(i in 0:order)
{
L = L + (x^i)*choose(order, i)*choose(((order + i - 1)/2), order)
}
L = (2^order)*L
}
xSeq = seq(-1, 1, by = 1/100)
l0 = legendre(0, xSeq)
l1 = legendre(1, xSeq)
l2 = legendre(2, xSeq)
l3 = legendre(3, xSeq)
l4 = legendre(4, xSeq)
l5 = legendre(5, xSeq)
plot(xSeq, l0, type = "l", ylim = c(-1, 1))
lines(xSeq, l1, col = "red")
lines(xSeq, l2, col = "blue")
lines(xSeq, l3, col = "green")
lines(xSeq, l4, col = "pink")
lines(xSeq, l5, col = "lightblue")
legenTarget = function(beta, Qf, x)
{
f = 0
for(i in 0:Qf)
{
f = f + beta[i+1]*legendre(i, x)
}
return(f)
}
polyTarget = function(alpha, Qf, x)
{
f = 0
for (i in 0:Qf)
{
f = f + alpha[i+1]*(x^i)
}
return(f)
}
set.seed(123)
alphaRand = runif(3, -1, 1)
betaRand = runif(3, -1, 1)
polyTargetRun = polyTarget(alphaRand, 3, xSeq)
legenTargetRun = legenTarget(betaRand, 3, xSeq)
plot(polyTargetRun)
polyTargetRun
source("F:/.University/5th Year/STA5068Z/Etienne Assignments/Project/Assignment1.R", echo=TRUE)
polyTargetRun
install.packages("deSolve", repos = "https://cloud.r-project.org")
legendre = function(order, x)
{
L = 0
for(i in 0:order)
{
L = L + (x^i)*choose(order, i)*choose(((order + i - 1)/2), order)
}
L = (2^order)*L
}
xSeq = seq(-1, 1, by = 1/100)
l0 = legendre(0, xSeq)
l1 = legendre(1, xSeq)
l2 = legendre(2, xSeq)
l3 = legendre(3, xSeq)
l4 = legendre(4, xSeq)
l5 = legendre(5, xSeq)
plot(xSeq, l0, type = "l", ylim = c(-1, 1))
lines(xSeq, l1, col = "red")
lines(xSeq, l2, col = "blue")
lines(xSeq, l3, col = "green")
lines(xSeq, l4, col = "pink")
lines(xSeq, l5, col = "lightblue")
legenTarget = function(beta, Qf, x)
{
f = 0
for(i in 0:Qf)
{
f = f + beta[i+1]*legendre(i, x)
}
return(f)
}
polyTarget = function(alpha, Qf, x)
{
f = 0
for (i in 0:Qf)
{
f = f + alpha[i+1]*(x^i)
}
return(f)
}
set.seed(123)
alphaRand = runif(2, -1, 1)
betaRand = runif(2, -1, 1)
polyTargetRun = polyTarget(alphaRand, 3, xSeq)
legenTargetRun = legenTarget(betaRand, 3, xSeq)
polyTargetRun
legenTargetRun
polyTargetRun = polyTarget(alphaRand, 2, xSeq)
legenTargetRun = legenTarget(betaRand, 2, xSeq)
polyTargetRun
legenTargetRun
alphaRand
alphaRand = runif(3, -1, 1)
betaRand = runif(3, -1, 1)
polyTargetRun = polyTarget(alphaRand, 2, xSeq)
legenTargetRun = legenTarget(betaRand, 2, xSeq)
polyTargetRun
legenTargetRun
lines(xSeq, legenTargetRun, col = "grey")
lines(xSeq, polyTargetRun, col = "gold")
legenTarget = function(targets, Qf, x)
{
plot(xSeq, legendre(Qf, x_seq))
for(j in 1:targets)
{
f = 0
tempBeta = runif(Qf, -1, 1)
for(i in 0:Qf)
{
f = f + tempBeta[i+1]*legendre(i, x)
}
lines(x_seq, f, col = j)
}
}
legenTargetRun = legenTarget(betaRand, 2, xSeq)
legenTarget(3, 2, xSeq)
C
C
legenTarget(3, 2, xSeq)
legenTarget = function(targets, Qf, x)
{
plot(x, legendre(Qf, x))
for(j in 1:targets)
{
f = 0
tempBeta = runif(Qf, -1, 1)
for(i in 0:Qf)
{
f = f + tempBeta[i+1]*legendre(i, x)
}
lines(x, f, col = j)
}
}
polyTarget = function(alpha, Qf, x)
{
f = 0
for (i in 0:Qf)
{
f = f + alpha[i+1]*(x^i)
}
return(f)
}
legenTarget(3, 2, xSeq)
legenTarget(3, 3, xSeq)
print(f)
legenTarget = function(targets, Qf, x)
{
plot(x, legendre(Qf, x), type = "l")
for(j in 1:targets)
{
f = 0
tempBeta = runif(Qf, -1, 1)
for(i in 0:Qf)
{
f = f + tempBeta[i+1]*legendre(i, x)
}
print(f)
lines(x, f, col = j)
}
}
polyTarget = function(alpha, Qf, x)
{
f = 0
for (i in 0:Qf)
{
f = f + alpha[i+1]*(x^i)
}
return(f)
}
legenTarget(3, 3, xSeq)
legenTarget = function(targets, Qf, x)
{
plot(x, legendre(Qf, x), type = "l")
for(j in 1:targets)
{
f = 0
tempBeta = runif(Qf+1, -1, 1)
for(i in 0:Qf)
{
f = f + tempBeta[i+1]*legendre(i, x)
}
print(f)
lines(x, f, col = j)
}
}
polyTarget = function(alpha, Qf, x)
{
f = 0
for (i in 0:Qf)
{
f = f + alpha[i+1]*(x^i)
}
return(f)
}
legenTarget(3, 3, xSeq)
polyTarget = function(alpha, Qf, x)
{
plot(x, legendre(Qf, x), type = "l")
for(j in 1:targets)
{
f = 0
tempAlpha = runif(Qf + 1, -1, 1)
for (i in 0:Qf)
{
f = f + tempAlpha[i+1]*(x^i)
}
print(f)
lines(x, f, col = j)
}
}
polyTarget(3, 2, xSeq)
legenTarget(3, 2, xSeq)
polyTarget(3, 2, xSeq)
polyTarget = function(targets, Qf, x)
{
plot(x, legendre(Qf, x), type = "l")
for(j in 1:targets)
{
f = 0
tempAlpha = runif(Qf + 1, -1, 1)
for (i in 0:Qf)
{
f = f + tempAlpha[i+1]*(x^i)
}
print(f)
lines(x, f, col = j)
}
}
polyTarget(3, 2, xSeq)
source("F:/.University/5th Year/STA5068Z/Etienne Assignments/Project/Assignment1.R", echo=TRUE)
source("F:/.University/5th Year/STA5068Z/Etienne Assignments/Project/Assignment1.R", echo=TRUE)
source("F:/.University/5th Year/STA5068Z/Etienne Assignments/Project/Assignment1.R", echo=TRUE)
y = c(0, length = length(x))
underlying = function(x)
{
y = c(0, length = length(x))
for (j in length(x))
{
if (x[j] < 0)
{
y[j] = abs(x[j] + 1) - 0.5
}
if (x[j] >= 0)
{
y[j] = abs(x[j] - 1) - 0.5
}
}
return(y)
}
x1 = runif(5, -2, 2)
underlying(x1)
underlying = function(x)
{
y = rep(0, length(x))
for (j in length(x))
{
if (x[j] < 0)
{
y[j] = abs(x[j] + 1) - 0.5
}
if (x[j] >= 0)
{
y[j] = abs(x[j] - 1) - 0.5
}
}
return(y)
}
x1 = runif(5, -2, 2)
underlying(x1)
x1
abs(-1.5)
underlying = function(x)
{
y = rep(0, length(x))
for (j in 1:length(x))
{
if (x[j] < 0)
{
y[j] = abs(x[j] + 1) - 0.5
}
if (x[j] >= 0)
{
y[j] = abs(x[j] - 1) - 0.5
}
}
return(y)
}
x1 = runif(5, -2, 2)
underlying(x1)
xBase = seq(-2, 2, length.out = 100)
underlying(x1)
plot(xBase, Y)
Y = underlying(xBase)
plot(xBase, Y)
plot(xBase, Y, type = "l")
xBase = seq(-2, 2, length.out = 500)
Y = underlying(xBase)
plot(xBase, Y, type = "l")
lines(underlying(x1))
underlying(x1)
x1
lines(x1, underlying(x1))
lines(xBase, underlying(x1))
lines(underlying(x1))
lines(underlying(x1))
lines(underlying(x2))
xBase = seq(-2, 2, length.out = 500)
x1 = runif(5, -2, 2)
x2 = runif(5, -2, 2)
x3 = runif(5, -2, 2)
x4 = runif(5, -2, 2)
x5 = runif(5, -2, 2)
Y = underlying(xBase)
plot(xBase, Y, type = "l")
lines(underlying(x1))
lines(underlying(x2))
lines(underlying(x3))
lines(underlying(x4))
lines(underlying(x5))
lines(x1[order(x1)]underlying(x1))
lines(x1[order(x1)], underlying(x1))
lines(x1[order(x1)], underlying(x1))
lines(x2[order(x2)], underlying(x1))
lines(x3[order(x3)], underlying(x1))
lines(x4[order(x4)], underlying(x1))
lines(x5[order(x5)], underlying(x1))
xBase = seq(-2, 2, length.out = 500)
x1 = runif(5, -2, 2)
x2 = runif(5, -2, 2)
x3 = runif(5, -2, 2)
x4 = runif(5, -2, 2)
x5 = runif(5, -2, 2)
Y = underlying(xBase)
plot(xBase, Y, type = "l")
lines(x1[order(x1)], underlying(x1), col = "red")
lines(x2[order(x2)], underlying(x2), col = "blue")
lines(x3[order(x3)], underlying(x3), col = "green")
lines(x4[order(x4)], underlying(x4), col = "pink")
lines(x5[order(x5)], underlying(x5), col = "magenta")
Y1 = underlying(x1)
Y1 = underlying(x1)
set.seed(300)
underlying = function(x)
{
y = rep(0, length(x))
for (j in 1:length(x))
{
if (x[j] < 0)
{
y[j] = abs(x[j] + 1) - 0.5
}
if (x[j] >= 0)
{
y[j] = abs(x[j] - 1) - 0.5
}
}
return(y)
}
xBase = seq(-2, 2, length.out = 500)
x1 = runif(5, -2, 2)
x2 = runif(5, -2, 2)
x3 = runif(5, -2, 2)
x4 = runif(5, -2, 2)
x5 = runif(5, -2, 2)
Y1 = underlying(x1)
Y2 = underlying(x2)
Y3 = underlying(x3)
Y4 = underlying(x4)
Y5 = underlying(x5)
hyp1 = function(x, y)
{
mod = lm(y ~ x)
pred = predict(mod, xBase)
lines(xBase, pred)
}
hyp1(x1, y1)
hyp1(x1, Y1)
x1
Y1
hyp1 = function(x, y)
{
mod = lm(y ~ x)
pred = predict(mod, newdata = data.frame(x = xBase))
lines(xBase, pred)
}
hyp1(x1, Y1)
set.seed(2023)
underlying = function(x)
{
y = rep(0, length(x))
for (j in 1:length(x))
{
if (x[j] < 0)
{
y[j] = abs(x[j] + 1) - 0.5
}
if (x[j] >= 0)
{
y[j] = abs(x[j] - 1) - 0.5
}
}
return(y)
}
xBase = seq(-2, 2, length.out = 500)
x1 = runif(5, -2, 2)
x2 = runif(5, -2, 2)
x3 = runif(5, -2, 2)
x4 = runif(5, -2, 2)
x5 = runif(5, -2, 2)
Y1 = underlying(x1)
Y2 = underlying(x2)
Y3 = underlying(x3)
Y4 = underlying(x4)
Y5 = underlying(x5)
Y = underlying(xBase)
plot(xBase, Y)
plot(xBase, Y, type = "l")
hyp1 = function(x, y)
{
mod = lm(y ~ x)
pred = predict(mod, newdata = data.frame(x = xBase))
lines(xBase, pred)
}
hyp1(x1, Y1)
hyp1 = function(x, y, color)
{
mod = lm(y ~ x)
pred = predict(mod, newdata = data.frame(x = xBase))
lines(xBase, pred, col = color)
}
hyp1(x1, Y1, "red")
hyp1(x1, Y1, "red")
hyp1(x2, Y2, "blue")
hyp1(x3, Y3, "green")
hyp1(x4, Y4, "pink")
hyp1(x5, Y6, "magenta")
plot(xBase, Y, type = "l")
hyp2(x1, Y1, "red")
hyp2 = function(x, y, color)
{
mod = lm(y ~ sin(pi*x) + cos(pi*x) - 1)
pred = predict(mod, newdata = data.frame(x = xBase))
lines(xBase, pred, col = color)
}
plot(xBase, Y, type = "l")
hyp2(x1, Y1, "red")
hyp2(x2, Y2, "blue")
hyp2(x3, Y3, "green")
hyp2(x4, Y4, "pink")
hyp2(x5, Y5, "magenta")
plot(dat$X1, X2)
### Q4
dat = read.table("Collider Data 2022.txt", h = TRUE,stringsAsFactors =TRUE)
setwd("F:/.University/5th Year/STA5068Z/Etienne Assignments/Project")
setwd("F:/.University/5th Year/STA5068Z/Etienne Assignments/Project")
### Q4
dat = read.table("Collider Data 2022.txt", h = TRUE,stringsAsFactors =TRUE)
### Q4
dat = read.table("Collider Data 2022.txt", h = TRUE,stringsAsFactors =TRUE)
setwd("F:/.University/5th Year/STA5068Z/Etienne Assignments/Project")
### Q4
dat = read.table("Collider Data 2022.txt", h = TRUE,stringsAsFactors =TRUE)
### Q4
dat = read.table("Collider_Data_2022.txt", h = TRUE,stringsAsFactors =TRUE)
plot(dat$X1, X2)
plot(dat$X1, dat$X2)
head(dat)
max.col(dat[, 3:5])
plot(dat$X1, dat$X2, col = max.col(dat[, 3:5]))
plot(dat$X1, dat$X2, col = max.col(dat[, 3:5]), type = "p", lwd = 4)
